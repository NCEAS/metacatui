# Default values for metacatui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

## appConfig contains the MetacatUI.AppConfig settings that can be overridden. Uses a configMap to
## define MetacatUI.AppConfig, replacing the version of config/config.js found on the mounted drive.
## Note that changes to the configMap will not be read unless the pod is restarted, and changes to
## these values will not be reflected in the configMap unless you do a 'helm upgrade'.
##
appConfig:
  ## appConfig.enabled Use a configMap to define MetacatUI.AppConfig, replacing the on-disk version
  ## Typical use is "false" for development purposes, and "true" for more-permanent deployments
  ##
  enabled: true

  ## appConfig.root (required) The url root to be appended after the appConfig.baseUrl, below
  ##
  root: "/"

  ## appConfig.theme (required) Corresponds to the name of one of the directories in src/js/themes/
  ##
  theme: "default"

  ## appConfig.baseUrl (required) the base url (typically defined by the ingress)
  ##
  baseUrl: "http://localhost:8080/"

  ## Optional configuration -- leave commented to use metacatui default values
  ##
#  d1CNBaseUrl: "https://cn-sandbox.test.dataone.org/cn"
#  mapKey: "your-map-key-here"
#  mdqBaseUrl: "https://localhost:8080:30443/quality"
#  dataoneSearchUrl: "https://search-stage.test.dataone.org"
#  portalLimit: 100
#  googleAnalyticsKey: "your-google-analytics-key-here"
#  bioportalAPIKey: "your-bio-portal-api-key-here"
#  cesiumToken: "your-cesium-token-here"


git:
  ## git.enabled set 'true' to create an initContainer and do a git checkout of the metacatui files
  ## NOTE: If you set git.enabled: 'false', then you will need to provide values for 'volumes'
  ## that
  enabled: true

  ## git.repoUrl the https url of the repo to be cloned
  repoUrl: "https://github.com/NCEAS/metacatui.git"

  ## git.revision can be any string that makes sense after the command `git checkout`... - for
  ## example:
  ##     git checkout tags/2.29.0    =>     revision: "tags/2.29.0"
  ##     git checkout develop        =>     revision: "develop"
  ##
  revision: "main"

## volumes Uncomment and provide values if you want to use a pre-configured PVC instead of doing a
## git checkout
#volumes:
#  ## volumes.name substitute your own release name, but do NOT change the '-mcui-static-files' part
#  - name: <Your-Release-Name>-mcui-static-files
#    persistentVolumeClaim:
#      claimName: <Your-Pre-Configured-pvc>

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

#livenessProbe:
#  httpGet:
#    path: /
#    port: http
#readinessProbe:
#  httpGet:
#    path: /
#    port: http

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: traefik
  annotations:
    #traefik.ingress.kubernetes.io/router.entrypoints: web
    kubernetes.io/ingress.class: traefik
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: firn.local
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mcui-metacatui  # Assumes the service is exposed in the mcui namespace
            port:
              number: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
