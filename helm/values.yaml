## Default values for metacatui.
## This is a YAML-formatted file.
## Edit values, then install and/or upgrade using:
##
## $  helm upgrade --install releasename -n mynamespace ./relative/path/to/helm/directory
##

## appConfig contains the MetacatUI.AppConfig settings that can be overridden. Uses a configMap to
## define MetacatUI.AppConfig, replacing the version of config/config.js found on the mounted drive.
##
## You can define any attributes here, that will be automatically inserted into config/config.js.
## For a full list of attributes that can be overridden, see AppModel.js:
## https://github.com/NCEAS/metacatui/blob/main/src/js/models/AppModel.js
##
## Note that changes to the configMap will not be read unless the pod is restarted, and changes to
## these values will not be reflected in the configMap unless you do a 'helm upgrade'.
##
appConfig:
  ## appConfig.enabled Use a configMap to define MetacatUI.AppConfig, replacing the on-disk version
  ## Typical use is "false" for development purposes, and "true" for more-permanent deployments
  ##
  enabled: true

  ## appConfig.root (required) The url root to be appended after the appConfig.baseUrl, below.
  ##
  root: "/"

  ## appConfig.baseUrl (required) the base url. (Typically defined by the ingress; used to contact
  ## the metacat API.)
  ##
  baseUrl: "http://localhost:8080/"

  ## Optional configuration. Note you can define any attributes here, to override those that would
  ## normally appear in config.js. See full listing in AppModel.js:
  ## https://github.com/NCEAS/metacatui/blob/main/src/js/models/AppModel.js
  ##

  ## appConfig.theme Corresponds to the name of a directory in src/js/themes/. 'default' if not set
  ##
  theme: "knb"


livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

service:
  type: ClusterIP
  port: 80

## ingress typically disabled here (enabled: false) and handled by metacat helm chart.
## Example settings below for local dev
##
ingress:
  enabled: false
  className: traefik    # enable in rancher desktop
  annotations:
    kubernetes.io/ingress.class: traefik
  hosts:
    - host: myMacbookPro.local    # example hostname of local machine
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mcui-metacatui  # Assumes the service is exposed in the 'mcui' namespace
            port:
              number: 80
  tls: []


## source  The source from which to retrieve the metacatui code. NOTE: Changes should not be needed
## here, unless you wish to deviate from the official metacatui release version defined in the
## helm chart (see Chart.yaml)
##
source:
  ## source.from  Options are "package" (the default), "git", or "pvc"
  ## * "package" will download a release package from the metacatui git repository, unzip it, and
  ##    install the files in local pod storage (emptyDir{})
  ## * "git" will clone a specific branch or tag from the metacatui git repository, and install the
  ##    files in local pod storage (emptyDir{})
  ## * "pvc" expects to find a pre-configured PVC containing the files to be used. Note you will
  ##    need to provide values for a pre-configured PVC in 'volumes', below
  ##
  from: package

  ## source.package (default): use the package version defined in Chart.yaml, unless overridden here
  ## Note these settings ignored unless 'source.from:' is set to 'package'
  ## example:
  ##    source.package.location: "https://github.com/NCEAS/metacatui/archive"
  ##    source.package.version: "2.26.0"
  ## ...will download:   https://github.com/NCEAS/metacatui/archive/2.26.0.zip
  ##
  package:
    ## source.package.location The remote location where the release zipfile is hosted
    ##
    location: "https://github.com/NCEAS/metacatui/archive"

    ## source.package.version override the release version defined in Chart.yaml
    ## Assumes release is a zipfile named <version>.zip
    ## LEAVE COMMENTED UNLESS YOU NEED TO OVERRIDE THE CHART SETTING!
  #    version: "2.29.1"

  ## source.git clone a specific branch or tag from the metacatui git repository, and install the
  ## files in local pod storage (emptyDir{})
  ## Note these settings ignored unless 'source.from:' is set to 'git'
  ##
#  git:
#    ## source.git.repoUrl the https url of the repo to be cloned
#    repoUrl: "https://github.com/NCEAS/metacatui.git"
#
#    ## source.git.revision can be any string that makes sense after the command `git checkout`...
#    ## - for example:
#    ##     git checkout tags/2.29.0    =>     revision: "tags/2.29.0"
#    ##     git checkout develop        =>     revision: "develop"
#    ##
#    revision: "develop"

## volumes Uncomment and provide values if you want to use a pre-configured PVC instead of doing a
## git checkout
#volumes:
#  ## volumes.name substitute your own release name, but do NOT change the '-mcui-source-files' part
#  - name: <Your-Release-Name>-mcui-source-files
#    persistentVolumeClaim:
#      claimName: <Your-Pre-Configured-pvc>


image: {}
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount: {}
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
